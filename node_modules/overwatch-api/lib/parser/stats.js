'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = function (platform, region, tag, cb) {

  var url = platform === 'pc' ? 'https://playoverwatch.com/en-us/career/' + platform + '/' + region + '/' + tag : 'https://playoverwatch.com/en-us/career/' + platform + '/' + tag;

  var options = {
    uri: encodeURI(url),
    encoding: 'utf8'
  };

  (0, _requestPromise2.default)(options).then(function (htmlString) {

    // Begin html parsing.
    var $ = _cheerio2.default.load(htmlString);
    var user = $('.header-masthead').text();
    var level = $('.player-level div').first().text();
    var portrait = $('.player-portrait').attr('src');

    // Get prestige level by matching .player-level background url hex.
    var prestigeEl = $('.player-level').first().attr('style');
    var prestigeHex = prestigeEl.match(/0x0*[1-9a-fA-F][0-9a-fA-F]*/);
    var prestigeLevel = prestigeHex ? (0, _utils.getPrestigeLevel)(prestigeHex[0]) : 0;

    var stats = {};

    //
    // Top Heroes.
    //

    // Quickplay.
    var quickplayTopHeroesEls = $('#quickplay [data-category-id="overwatch.guid.0x0860000000000021"]').find('.progress-category-item');
    var quickplayTopHeroes = [];
    quickplayTopHeroesEls.each(function (i, el) {
      var stat = {};
      stat.hero = $(this).find('.title').text();
      stat.played = $(this).find('.description').text();
      stat.img = $(this).find('img').attr('src');
      quickplayTopHeroes.push(stat);
    });
    stats['top_heroes'] = { quickplay: [] };
    stats['top_heroes']['quickplay'] = quickplayTopHeroes;

    // Competitive.
    var compTopHeroesEls = $('#competitive [data-category-id="overwatch.guid.0x0860000000000021"]').find('.progress-category-item');
    var compTopHeroes = [];
    compTopHeroesEls.each(function (i, el) {
      var stat = {};
      stat.hero = $(this).find('.title').text();
      stat.played = $(this).find('.description').text();
      stat.img = $(this).find('img').attr('src');
      compTopHeroes.push(stat);
    });
    stats['top_heroes']['competitive'] = [];
    stats['top_heroes']['competitive'] = compTopHeroes;

    //
    // Career Stats
    //
    var statCategories = ['Combat', 'Match Awards', 'Assists', 'Average', 'Miscellaneous', 'Best', 'Game'];

    // Quickplay Stats.
    statCategories.forEach(function (item) {
      var els = $('#quickplay [data-category-id="0x02E00000FFFFFFFF"] h5:contains("' + item + '")').closest('table').find('tbody tr');
      var statsArr = [];
      els.each(function (i, el) {
        var stat = {};
        stat.title = $(this).find('td').first().text();
        stat.value = $(this).find('td').next().text();
        statsArr.push(stat);
      });
      item = item.replace(' ', '_').toLowerCase();
      stats[item] = { quickplay: [] };
      stats[item]['quickplay'] = statsArr;
    });

    // Competitive Stats.
    statCategories.forEach(function (item) {
      var els = $('#competitive [data-category-id="0x02E00000FFFFFFFF"] h5:contains("' + item + '")').closest('table').find('tbody tr');
      var statsArr = [];
      els.each(function (i, el) {
        var stat = {};
        stat.title = $(this).find('td').first().text();
        stat.value = $(this).find('td').next().text();
        statsArr.push(stat);
      });
      item = item.replace(' ', '_').toLowerCase();
      stats[item]['competitive'] = [];
      stats[item]['competitive'] = statsArr;
    });

    var json = {
      username: user,
      level: parseInt(level) + prestigeLevel,
      portrait: portrait,
      stats: stats
    };

    cb(json);
  }).catch(function (err) {
    cb(err);
  });
};

var _cheerio = require('cheerio');

var _cheerio2 = _interopRequireDefault(_cheerio);

var _requestPromise = require('request-promise');

var _requestPromise2 = _interopRequireDefault(_requestPromise);

var _utils = require('./utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }